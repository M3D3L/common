name: Build and Deploy Sites
on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read

env:
  NODE_VERSION: 20
  POCKETBASE_URL: ${{ vars.POCKETBASE_URL }}
  WHATSAPP_NUMBER: ${{ vars.WHATSAPP_NUMBER }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        site: [guillermomedel, relocatetosancarlos]
    
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: './package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Set site variables
        id: vars
        run: |
          if [ "${{ matrix.site }}" = "guillermomedel" ]; then
            echo "domain=guillermomedel.com" >> $GITHUB_OUTPUT
            echo "path=./sites/guillermomedel.com" >> $GITHUB_OUTPUT
            echo "repo=M3D3L/guillermomedel.com" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.site }}" = "relocatetosancarlos" ]; then
            echo "domain=relocatetosancarlos.com" >> $GITHUB_OUTPUT
            echo "path=./sites/relocatetosancarlos.com" >> $GITHUB_OUTPUT
            echo "repo=M3D3L/relocatetosancarlos.com" >> $GITHUB_OUTPUT
          fi

      - name: Build ${{ steps.vars.outputs.domain }}
        run: npm run generate
        working-directory: ${{ steps.vars.outputs.path }}
        env:
          POCKETBASE_URL: ${{ env.POCKETBASE_URL }}
          WHATSAPP_NUMBER: ${{ env.WHATSAPP_NUMBER }}

      - name: Prepare deploy folder
        run: |
          SITE_PATH="${{ steps.vars.outputs.path }}"
          DEPLOY_DIR="deploy_${{ matrix.site }}"
          
          # Look for build output directory
          if [ -d "$SITE_PATH/.output/public" ]; then
            BUILD_OUTPUT="$SITE_PATH/.output/public"
          elif [ -d "$SITE_PATH/dist" ]; then
            BUILD_OUTPUT="$SITE_PATH/dist"
          elif [ -d "$SITE_PATH/build" ]; then
            BUILD_OUTPUT="$SITE_PATH/build"
          else
            echo "Error: No build output found"
            exit 1
          fi
          
          echo "Using build output: $BUILD_OUTPUT"
          
          # Create deploy directory and copy files
          mkdir -p "$DEPLOY_DIR"
          cp -a "$BUILD_OUTPUT"/. "$DEPLOY_DIR"/
          
          # Add CNAME file
          echo "${{ steps.vars.outputs.domain }}" > "$DEPLOY_DIR/CNAME"
          
          # Debug output
          echo "Deploy folder contents:"
          ls -la "$DEPLOY_DIR"

      - name: Deploy ${{ steps.vars.outputs.domain }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          repository-name: ${{ steps.vars.outputs.repo }}
          branch: gh-pages
          folder: deploy_${{ matrix.site }}
          clean: true
          token: ${{ secrets.DEPLOY_TOKEN }}